{"version":3,"sources":["components/media-slider/index.styles.ts","components/media-slider/collection.style.tsx","models/CardSize.ts","components/icons/index.ts","models/Slider.ts","components/media-slider/movies.style.ts","components/media-card/card.style.tsx","components/media-poster/poster-styles.ts","components/media-slider/collection.tsx","components/media-poster/poster.tsx","components/media-card/card.tsx","components/media-slider/movies.tsx","effects/useVirtual.ts","components/commons/styles.tsx","gqls/movieDetails.ts","components/media-details/details-card.styles.ts","components/media-genres/genres-styles.ts","components/media-genres/genres.tsx","components/media-details/attribute/details-attribute.style.ts","components/media-details/attribute/details-attribute.tsx","components/media-details/title/details-title.style.ts","components/media-details/rating/details-rating.style.tsx","components/media-details/rating/details-rating.tsx","components/media-details/title/details-title.tsx","gqls/cast.ts","components/media-objects/object.styles.ts","components/media-objects/media-objects.tsx","containers/details/castDetails.tsx","components/media-details/details-cast-and-crew.styles.ts","components/media-details/details-cast-and-crew.tsx","gqls/reviews.ts","components/media-loader/index.tsx","components/media-details/reviews/details-reviews.style.ts","components/media-details/reviews/details-reviews.tsx","containers/details/reviews.tsx","components/media-details/details-card.tsx","containers/details/movieDetails.tsx","components/media-slider/index.tsx","gqls/movies.ts","containers/movies/popular.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["Wrapper","styled","animated","div","Header","header","MoviesWrapper","Title","TitleText","span","TitleIcon","Footer","footer","DetailsWrapper","ul","li","CardSize","ScrollButton","button","ScrollLeft","ScrollRight","Plus","Minus","LoadingState","ArrowDownIcon","ChevronDown","ArrowUpIcon","ChevronUp","ChevronLeftIcon","ChevronLeft","ChevronRightIcon","ChevronRight","CloseIcon","X","CheckIcon","Check","ImageIcon","Clock","Image","p","color","UserIcon","User","Imdb","Hash","Crown","MoviesContainer","expandFull","size","columns","CardContainer","isLoadingCard","selected","css","CardCheckedWrapper","ImageIconWrapper","NavDir","PosterWrapper","CardImage","img","CardImageWrapper","CardRating","React","poster_path","index","small","title","src","id","onSelect","loadingCard","style","handleSelection","onClick","prev","current","slider","movies","loadingCards","map","release_date","vote_average","hide","key","length","val","items","fetchMore","totalResults","loadingState","onSelection","showDetails","selectedIndex","setMovies","page","setPage","actvStartIdx","setActvStartIdx","setLoadingCards","visibleColumns","setVisibleColumns","useState","visibleElements","totalItems","inputs","setInputs","itemsToHideLeft","itemsToShow","itemsToHideRight","shouldLoadMore","config","setConfig","useEffect","remainingElements","useVirtual","lazyConfig","setLazyInputs","moviesRef","isFirstRun","visibleItems","handleNav","dir","moveForward","RIGHT","State","LOADING","moveBackward","LEFT","itemsLen","isFinalPage","newPage","counter","newItems","itr","cards","Math","abs","Array","from","k","i","setTimeout","nativeElement","clientWidth","floor","cols","itemIndex","findIndex","m","ceil","LOADED","FAILED","ref","newSelection","find","movie","Button","details","gql","DetailsCardWrapper","section","Font","Overview","AttributesContainer","AttributeContainer","CloseDetails","GenresContainer","ReviewsWrapper","Box2","CastAndCrewWrapper","GenresWrapper","GenreItem","Genres","name","AttributeWrapper","AttributeLabel","AttributeValue","RunTime","label","value","TitleWrapper","DetailsRatingContainer","TitleYear","TitleRow1","TitleRow2","DetailsRatingWrapper","rating","DetailsRatingValue","DetailsRating","DetailsTitle","year","Date","getFullYear","cast","ObjectsContainer","ObjectsWrapper","Object","ObjectImage","loaded","ObjectName","FallbackImage","ObjectHeader","MediaObjectContainer","MediaObjects","memo","path","MediaObject","setLoaded","onLoad","CastAndCrew","movieId","client","useApolloClient","loading","setLoading","detailsData","setDetailsData","executeQuery","a","query","variables","lang","movie_id","fetchPolicy","data","getCredits","view","crew","profile_path","CastDetailsContainer","isCast","LoaderSize","Loader","wh","props","useSpring","opacity","width","height","viewBox","xmlns","stroke","fill","fillRule","transform","strokeWidth","strokeOpacity","cx","cy","r","d","attributeName","type","to","dur","repeatCount","ReviewWrapper","ReviewContent","ReviewAuthor","ReviewsContainer","ReviewsHeader","ReadMoreControl","ReviewText","showFull","GradientCover","Review","content","author","textRef","useRef","showReadMore","setShowReadMore","showFullText","setShowFullText","node","scrollHeight","Reviews","trail","useTrail","gentle","MovieDetails","setData","reviewsQuery","getReviews","results","handleClose","overview","genres","runtime","isLoading","original_language","wrapperRef","video","round","format","ISO6391","getName","getDetails","imdb_id","SliderView","setExpandFull","state","selectedMovie","setShowDetails","set","handleExpandFull","handleLoadMore","handleMovieSelection","clear","onDetailsClose","expand","popular","total_results","movieData","setMovieData","getMovies","newData","getPopular","handleFetchMore","item","assign","ApolloClient","uri","cache","InMemoryCache","hot","ApolloProvider","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dee84d8b.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { animated } from \"react-spring\";\r\n\r\nexport const Wrapper = styled(animated.div) <{ expand?: number }>`\r\n  background-color: #000;\r\n  border-radius: .25rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: .5rem 0;\r\n  width: 100%; \r\n`;\r\n\r\nexport const Header = styled.header`\r\n  align-items: center;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  display: flex;\r\n  font-family: \"Poppins\";\r\n  font-size: 1.3rem;\r\n  justify-content: flex-start;\r\n  padding-top: 1rem;\r\n  text-align: left;\r\n  width: 100%;\r\n`;\r\n\r\nexport const MoviesWrapper = styled(animated.div) <{ expand?: number }>`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n  position: relative;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Title = styled.div`\r\npadding-left: 2rem;\r\n`;\r\n\r\nexport const TitleText = styled.span`\r\n  color: #fff;\r\n  font-family: Poppins;\r\n  font-size: 1.5rem;\r\n  font-weight: 300;\r\n`;\r\n\r\nexport const TitleIcon = styled.span``;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  margin-left: auto;\r\n`;\r\n\r\nexport const Footer = styled.footer`\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n`;\r\n\r\nexport const DetailsWrapper = styled.div`\r\n  height: 0;\r\n  margin: 0 auto;\r\n  min-height: 700px;\r\n  width: 100%;\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const MoviesControl = styled.ul`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  list-style: none;\r\n`;\r\n\r\nexport const MoviesControlItem = styled.li`\r\n  color: white;\r\n`;\r\n\r\nexport const ScrollButton = styled.button`\r\n  background: rgba(0,0,0, .9);\r\n  border-radius: 50%;\r\n  border: none;\r\n  cursor: pointer;\r\n  height: 3.5rem;\r\n  outline: none;\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  width: 3.5rem;\r\n  z-index: 1;\r\n`;\r\n\r\nexport const ScrollLeft = styled(ScrollButton)`\r\n  left: 0;\r\n`;\r\n\r\nexport const ScrollRight = styled(ScrollButton)`\r\n  right: 0;\r\n`;\r\n\r\nexport const MoviesWrapper = styled.div`\r\n  height: 100%;\r\n  position: relative;\r\n  width: 100%;\r\n`;\r\n\r\nexport const DetailsCardContainer = styled.div``;","\r\nexport enum CardSize {\r\n  small = \"200\",\r\n  large = \"400\"\r\n};","import styled from \"styled-components\";\r\n\r\nimport { Plus } from \"@styled-icons/feather/Plus\";\r\nimport { Minus } from \"@styled-icons/feather/Minus\";\r\nimport { ChevronDown } from \"@styled-icons/feather/ChevronDown\";\r\nimport { ChevronUp } from \"@styled-icons/feather/ChevronUp\";\r\nimport { ChevronLeft } from \"@styled-icons/feather/ChevronLeft\";\r\nimport { ChevronRight } from \"@styled-icons/feather/ChevronRight\";\r\nimport { X } from \"@styled-icons/feather/X\";\r\nimport { Check } from \"@styled-icons/feather/Check\";\r\nimport { Clock } from \"@styled-icons/feather/Clock\";\r\nimport { Image } from \"@styled-icons/feather/Image\";\r\nimport { User } from \"@styled-icons/feather/User\";\r\nimport { Imdb } from \"@styled-icons/fa-brands/Imdb\";\r\nimport { Hash } from '@styled-icons/feather/Hash';\r\nimport { Crown } from \"@styled-icons/fa-solid/Crown\";\r\n\r\nexport const PlusIcon = styled(Plus)`\r\n  color: red;\r\n`;\r\n\r\nexport const MinusIcon = styled(Minus)`\r\n  color: red;\r\n`;\r\n\r\nexport const ArrowDownIcon = styled(ChevronDown)`\r\n  color: #cc0000;\r\n`;\r\n\r\nexport const ArrowUpIcon = styled(ChevronUp)`\r\n  color: #cc0000;\r\n`;\r\n\r\nexport const ChevronLeftIcon = styled(ChevronLeft)`\r\n  color: #cc0000;\r\n`;\r\nexport const ChevronRightIcon = styled(ChevronRight)`\r\n  color: #cc0000;\r\n`;\r\n\r\nexport const CloseIcon = styled(X)`\r\n  color: #cc0000;\r\n`;\r\n\r\nexport const CheckIcon = styled(Check)`\r\n  color: #fff;\r\n`;\r\n\r\nexport const ClockIcon = styled(Clock)`\r\n  color: #000;\r\n`;\r\n\r\nexport const ImageIcon = styled(Image) <{ color?: string }>`\r\n  color: ${p => p.color};\r\n`;\r\n\r\nexport const UserIcon = styled(User) <{ color?: string }>``;\r\n\r\nexport const ImdbIcon = styled(Imdb) <{ color?: string }>`\r\n  color: ${p => p.color}\r\n`;\r\n\r\nexport const HashIcon = styled(Hash) <{ color?: string }>`\r\n  color: ${p => p.color};\r\n`;\r\n\r\nexport const CrownIcon = styled(Crown) <{ color?: string }>`\r\n  color: ${p => p.color};\r\n`;","import Movie from \"./Movie\";\r\n\r\nexport enum LoadingState {\r\n  LOADING = \"LOADING\",\r\n  LOADED = \"LOADED\",\r\n  FAILED = \"FAILED\",\r\n  DEFAULT = \"DEFAULT\"\r\n};\r\n\r\nexport default interface Slider {\r\n  movies: Movie[];\r\n  title: string;\r\n  titleIcon?: string;\r\n  fetchMore?: (page: number) => void;\r\n  totalResults: number;\r\n  loadingState?: LoadingState;\r\n}","import styled from \"styled-components\";\r\nimport { CardSize } from \"../../models/CardSize\";\r\nimport { animated } from \"react-spring\";\r\n\r\nexport const MoviesContainer = styled(animated.div)<{\r\n  selected?: number;\r\n  size?: CardSize;\r\n  slider?: number;\r\n  expandFull?: number;\r\n  columns?: number;\r\n}>`\r\n  ${({ expandFull, size }) =>\r\n    expandFull\r\n      ? `grid-template-rows: repeat(3, 300px);`\r\n      : `grid-template-rows: repeat(1, 300px);`};\r\n  align-content: flex-start;\r\n  color: red;\r\n  display: grid;\r\n  grid-auto-flow: row;\r\n  grid-column-gap: 1.25rem;\r\n  grid-row-gap: 1.25rem;\r\n  grid-template-columns: repeat(${p => p.columns}, 200px);\r\n  height: 100%;\r\n  justify-content: center;\r\n  overflow-x: hidden;\r\n  overflow-y: hidden;\r\n  position: relative;\r\n  scroll-behavior: smooth;\r\n  width: 100%;\r\n  padding: 1rem 0;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { CardSize } from \"../../models/CardSize\";\r\nimport { animated } from \"react-spring\";\r\n\r\nexport const CardContainer = styled(animated.div)<{\r\n  selected?: boolean;\r\n  opacity?: number;\r\n  height?: number;\r\n  size?: CardSize;\r\n  hide?: number;\r\n  isLoadingCard?: number;\r\n}>`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  border-radius: 0.1rem;\r\n  height: 100%;\r\n  width: 200px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  border: ${(p) =>\r\n    !p.isLoadingCard ? \".1rem solid black;\" : \".25rem solid black\"};\r\n  ${(p) =>\r\n    p.isLoadingCard\r\n      ? \"background: linear-gradient(358deg, #000000, #4b4848);\"\r\n      : \"\"};\r\n  ${(p) =>\r\n    p.selected &&\r\n    `&::before {\r\n    content: '';\r\n    display: block;\r\n    position: absolute;\r\n    border: .1rem solid rgba(204,0,0,0.95);\r\n    left: -.5rem;\r\n    right: 0;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    height: 100%;\r\n    width: 100%;\r\n    padding: .5rem;\r\n    border-radius: .1rem;\r\n  }`};\r\n  ${(p) =>\r\n    p.isLoadingCard\r\n      ? css`\r\n        `\r\n      : \"\"};\r\n`;\r\n\r\nexport const CardTitle = styled.div`\r\n  font-family: \"Poppins\";\r\n  font-weight: 300;\r\n  font-size: 0.9rem;\r\n  color: white;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  width: 90%;\r\n  text-overflow: ellipsis;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const CardHeader = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  width: 100%;\r\n  height: 10%;\r\n`;\r\n\r\nexport const CardFooter = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 10%;\r\n`;\r\n\r\nexport const CardYear = styled.span`\r\n  font-family: \"Poppins\";\r\n  font-weight: 300;\r\n  font-size: 0.8rem;\r\n  color: white;\r\n`;\r\n\r\nexport const CardCheckedWrapper = styled.div`\r\n  width: 2rem;\r\n  height: 2rem;\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  left: 0;\r\n  right: 0;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  background: rgba(204, 0, 0, 0.95);\r\n  border-radius: 50%;\r\n`;\r\n\r\nexport const ImageIconWrapper = styled.div`\r\n  width: 2rem;\r\n  height: 2rem;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { animated } from 'react-spring';\r\nimport { CardSize } from '../../models/CardSize';\r\n\r\nexport const PosterWrapper = styled.div<{size?: CardSize}>`\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nexport const CardImage = styled.img<{hide?: boolean}>`\r\n  height: 100%;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const CardImageWrapper = styled(animated.div)<{ selected?: boolean }>`\r\n  align-items: ${(p) => (p.selected ? \"flex-start\" : \"center\")};\r\n  display: flex;\r\n  height: 100%;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const CardRating = styled.span`\r\n  align-items: center;\r\n  background: rgba(204,0,0,0.95);\r\n  border-bottom-left-radius: .3rem;\r\n  border-top-left-radius: .3rem;\r\n  box-shadow: -1px 1px 4px 2px rgba(0,0,0,0.5);\r\n  color: #fff;\r\n  display: flex;\r\n  font-family: \"Poppins\";\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  height: 1.75rem;\r\n  justify-content: center;\r\n  margin-left: auto;\r\n  margin-right: .2rem;\r\n  margin-top: .2rem;\r\n  min-width: 2rem;\r\n  position: absolute;\r\n  right: -.5rem;\r\n  top: .85rem;\r\n`;","import * as React from \"react\";\r\nimport { ScrollLeft, ScrollRight, MoviesWrapper } from \"./collection.style\";\r\nimport { CardSize } from \"../../models/CardSize\";\r\nimport { Movies as MoviesModel } from \"../../models/Movies\";\r\nimport { ChevronLeftIcon, ChevronRightIcon } from \"../icons\";\r\nimport Movie from \"./../../models/Movie\";\r\nimport { LoadingState as State } from \"../../models/Slider\";\r\nimport useVirtual from \"./../../effects/useVirtual\";\r\nimport { Configs } from \"./../../effects/useVirtual\";\r\nimport MoviesView from \"./movies\";\r\n\r\nexport enum NavDir {\r\n  LEFT = \"LEFT\",\r\n  RIGHT = \"RIGHT\",\r\n}\r\n\r\nexport default ({\r\n  items,\r\n  slider,\r\n  expandFull,\r\n  fetchMore,\r\n  totalResults,\r\n  loadingState,\r\n  onSelection,\r\n  showDetails,\r\n  selectedIndex,\r\n}: MoviesModel) => {\r\n  const [movies, setMovies] = React.useState([] as Movie[]);\r\n  const [page, setPage] = React.useState(1);\r\n  const [actvStartIdx, setActvStartIdx] = React.useState(0);\r\n  const [loadingCards, setLoadingCards] = React.useState([] as number[]);\r\n  const [visibleColumns, setVisibleColumns] = React.useState(0);\r\n  const [lazyConfig, setLazyInputs] = useVirtual();\r\n\r\n  const moviesRef = React.useRef<HTMLDivElement>(null);\r\n  const isFirstRun = React.useRef(true);\r\n  const visibleItems = React.useRef(0);\r\n\r\n  const handleNav = (dir: NavDir) => {\r\n    const moveForward = dir === NavDir.RIGHT && loadingState !== State.LOADING;\r\n    const moveBackward = dir === NavDir.LEFT && page > 1;\r\n    const itemsLen = items.length;\r\n\r\n    const isFinalPage =\r\n      itemsLen === totalResults &&\r\n      itemsLen - actvStartIdx < visibleItems.current;\r\n\r\n    const columns =\r\n      expandFull && !showDetails ? visibleColumns * 3 : visibleColumns;\r\n    let newPage = 0;\r\n\r\n    if (moveForward && !isFinalPage) {\r\n      newPage = page + 1;\r\n    } else if (moveBackward) {\r\n      newPage = page - 1;\r\n    }\r\n\r\n    setPage(newPage);\r\n    setLazyInputs({\r\n      visibleElements: columns,\r\n      page: newPage,\r\n      totalItems: items.length,\r\n    });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const {\r\n      itemsToShow,\r\n      itemsToHideLeft,\r\n      shouldLoadMore,\r\n      visibleElements,\r\n    } = lazyConfig as Configs;\r\n    if (visibleElements) {\r\n      let counter = 0;\r\n      const newItems = [...items];\r\n\r\n      // hide elements to the left of the window\r\n      for (let itr = 0; itr < itemsToHideLeft; itr++) {\r\n        newItems[counter++].hide = true;\r\n      }\r\n\r\n      setActvStartIdx(counter);\r\n\r\n      // show elements to be displayed in the window\r\n      for (let itr = 0; itr < itemsToShow; itr++) {\r\n        newItems[counter++].hide = false;\r\n      }\r\n\r\n      // hide all the elements to the right of the window\r\n      for (let itr = counter; itr < newItems.length; itr++) {\r\n        newItems[counter++].hide = true;\r\n      }\r\n\r\n      if (shouldLoadMore) {\r\n        const cards = Math.abs(newItems.length - page * visibleElements);\r\n        setLoadingCards(Array.from({ length: cards }).map((k, i) => i));\r\n        setTimeout(() => fetchMore(), 250);\r\n      }\r\n\r\n      setMovies(newItems);\r\n    }\r\n  }, [lazyConfig]);\r\n\r\n  // run it the first time\r\n  React.useEffect(() => {\r\n    const nativeElement = moviesRef.current;\r\n    if (nativeElement) {\r\n      const clientWidth = nativeElement.clientWidth;\r\n      const columns = Math.floor(clientWidth / 225);\r\n      setVisibleColumns(columns);\r\n      visibleItems.current = expandFull && !showDetails ? columns * 3 : columns;\r\n    }\r\n  }, []);\r\n\r\n  // monitor the actual data\r\n  React.useEffect(() => {\r\n    if (items.length) {\r\n      const nativeElement = moviesRef.current;\r\n      if (nativeElement) {\r\n        const clientWidth = nativeElement.clientWidth;\r\n        const cols = Math.floor(clientWidth / 225);\r\n        const columns = expandFull && !showDetails ? cols * 3 : cols;\r\n        setLazyInputs({\r\n          visibleElements: columns,\r\n          page,\r\n          totalItems: items.length,\r\n        });\r\n      }\r\n    }\r\n  }, [items]);\r\n\r\n  // monitor expand/collapse\r\n  React.useEffect(() => {\r\n    if (isFirstRun.current) {\r\n      isFirstRun.current = false;\r\n    } else {\r\n      let newPage = null;\r\n      const columns =\r\n        expandFull && !showDetails ? visibleColumns * 3 : visibleColumns;\r\n\r\n      if (!showDetails) {\r\n        if (actvStartIdx > 0) {\r\n          newPage = Math.ceil((actvStartIdx + 1) / columns);\r\n          newPage = newPage ? newPage : 1;\r\n        } else {\r\n          newPage = 1;\r\n        }\r\n        setLazyInputs({\r\n          visibleElements: columns,\r\n          page: newPage,\r\n          totalItems: items.length,\r\n        });\r\n      } else {\r\n        const itemIndex = movies.findIndex((m) => m.id === selectedIndex);\r\n        newPage = Math.ceil((itemIndex + 1) / columns);\r\n        setLazyInputs({\r\n          visibleElements: columns,\r\n          page: newPage,\r\n          totalItems: items.length,\r\n        });\r\n      }\r\n      setPage(newPage);\r\n    }\r\n  }, [expandFull, showDetails]);\r\n\r\n  React.useEffect(() => {\r\n    if (loadingState === State.LOADED || loadingState === State.FAILED) {\r\n      setLoadingCards([]);\r\n    }\r\n  }, [loadingState]);\r\n\r\n  const handleSelection = (id: number) => {\r\n    // make a quick copy\r\n    const newMovies = [...movies];\r\n\r\n    // get to be selected item\r\n    const newSelection = newMovies.find((movie) => movie.id === id);\r\n\r\n    onSelection(newSelection);\r\n  };\r\n\r\n  return (\r\n    <MoviesWrapper ref={moviesRef}>\r\n      <ScrollLeft onClick={() => handleNav(NavDir.LEFT)}>\r\n        <ChevronLeftIcon />\r\n      </ScrollLeft>\r\n      <MoviesView\r\n        slider={slider}\r\n        expandFull={expandFull}\r\n        size={CardSize.small}\r\n        columns={visibleColumns}\r\n        movies={movies}\r\n        handleSelection={handleSelection}\r\n        loadingCards={loadingCards}\r\n\r\n      />\r\n      <ScrollRight onClick={() => handleNav(NavDir.RIGHT)}>\r\n        <ChevronRightIcon />\r\n      </ScrollRight>\r\n    </MoviesWrapper>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { Poster } from \"../../models/Poster\";\r\nimport {\r\n  PosterWrapper,\r\n  CardImage,\r\n  CardImageWrapper,\r\n  CardRating,\r\n} from \"./poster-styles\";\r\nimport { CardSize } from \"../../models/CardSize\";\r\n\r\nexport default React.memo(({ poster_path, size, index }: Poster) => {\r\n  return (\r\n    <PosterWrapper size={size}>\r\n      {size === CardSize.small && <CardRating>{index}</CardRating>}\r\n      {poster_path && (\r\n        <CardImageWrapper selected={false}>\r\n          <CardImage\r\n            title=\"\"\r\n            src={`http://image.tmdb.org/t/p/w${size}/${poster_path}`}\r\n          ></CardImage>\r\n        </CardImageWrapper>\r\n      )}\r\n    </PosterWrapper>\r\n  );\r\n});\r\n","import * as React from \"react\";\r\nimport Movie from \"../../models/Movie\";\r\nimport { CardContainer, CardCheckedWrapper, ImageIconWrapper } from \"./card.style\";\r\nimport { CardSize } from \"../../models/CardSize\";\r\nimport Poster from \"../media-poster/poster\";\r\nimport { CheckIcon, ImageIcon } from \"../icons\";\r\n\r\ntype MovieType = Movie & {\r\n  index?: number;\r\n  onSelect?: (id: number) => void;\r\n  size?: CardSize;\r\n  loadingCard?: boolean;\r\n  style?: any\r\n};\r\n\r\nexport default React.memo(\r\n  ({\r\n    id,\r\n    poster_path,\r\n    onSelect,\r\n    selected,\r\n    size,\r\n    index,\r\n    loadingCard,\r\n    title,\r\n    style\r\n  }: MovieType) => {\r\n    const handleSelection = React.useCallback(\r\n      (id: number) => {\r\n        onSelect && onSelect(id);\r\n      },\r\n      [id]\r\n    );\r\n\r\n    return (\r\n      <>\r\n        {!loadingCard ? (\r\n          <CardContainer\r\n            onClick={() => id && handleSelection(id)}\r\n            selected={selected}\r\n            size={size}\r\n            style={style}\r\n          >\r\n            <Poster\r\n              poster_path={poster_path ? poster_path : \"\"}\r\n              index={index}\r\n              size={size}\r\n              title={title}\r\n            ></Poster>\r\n            {selected && (\r\n              <CardCheckedWrapper>\r\n                <CheckIcon />\r\n              </CardCheckedWrapper>\r\n            )}\r\n          </CardContainer>\r\n        ) : (\r\n          <CardContainer size={size} isLoadingCard={loadingCard ? 1 : 0}>\r\n            <ImageIconWrapper>\r\n              <ImageIcon color=\"#4b4848\" />\r\n            </ImageIconWrapper>\r\n          </CardContainer>\r\n        )}\r\n      </>\r\n    );\r\n  },\r\n  (prev, current) => prev.id === current.id\r\n);\r\n","import React from \"react\";\r\nimport { CardSize } from \"../../models/CardSize\";\r\nimport Movie from \"../../models/Movie\";\r\nimport { MoviesContainer } from \"./movies.style\";\r\nimport Card from \"../media-card/card\";\r\n\r\nexport interface Movies {\r\n  slider?: number;\r\n  expandFull?: number;\r\n  size: CardSize;\r\n  columns: number;\r\n  movies: Movie[];\r\n  loadingCards: number[];\r\n  handleSelection: (id: number) => void;\r\n}\r\n\r\nexport default ({\r\n  slider,\r\n  expandFull,\r\n  size,\r\n  columns,\r\n  movies,\r\n  loadingCards,\r\n  handleSelection,\r\n}: Movies) => {\r\n  return (\r\n    <MoviesContainer\r\n      slider={slider ? 1 : 0}\r\n      expandFull={expandFull ? 1 : 0}\r\n      size={CardSize.small}\r\n      columns={columns}\r\n    >\r\n      {movies.map(\r\n        (\r\n          {\r\n            id,\r\n            poster_path,\r\n            selected,\r\n            title,\r\n            release_date,\r\n            vote_average,\r\n            hide,\r\n          },\r\n          index\r\n        ) =>\r\n          !hide && (\r\n            <Card\r\n              poster_path={poster_path}\r\n              selected={selected}\r\n              key={`${id}-${release_date}`}\r\n              onSelect={handleSelection}\r\n              size={CardSize.small}\r\n              id={id}\r\n              title={title}\r\n              release_date={release_date}\r\n              vote_average={vote_average}\r\n              index={index}\r\n            />\r\n          )\r\n      )}\r\n      {loadingCards.length &&\r\n        loadingCards.map((val: number) => (\r\n          <Card id={val} loadingCard={true} key={val} poster_path={\"\"} />\r\n        ))}\r\n    </MoviesContainer>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\n\r\ninterface Inputs {\r\n  visibleElements: number;\r\n  page: number;\r\n  totalItems: number;\r\n}\r\n\r\nexport interface Configs {\r\n  itemsToHideLeft: number;\r\n  itemsToShow: number;\r\n  itemsToHideRight: number;\r\n  shouldLoadMore: boolean;\r\n  visibleElements: number;\r\n}\r\n\r\nexport default function useVirtual(): any {\r\n\r\n  const [inputs, setInputs] = React.useState({\r\n    visibleElements: 0,\r\n    page: 0,\r\n    totalItems: 0\r\n  })\r\n\r\n  const [config, setConfig] = React.useState({\r\n    itemsToHideLeft: 0,\r\n    itemsToShow: 0,\r\n    itemsToHideRight: 0,\r\n    shouldLoadMore: false,\r\n    visibleElements: 0\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (inputs.visibleElements) {\r\n      let itemsToHideLeft = 0;\r\n      const { page, visibleElements, totalItems } = inputs;\r\n\r\n      if (page === 1) {\r\n        itemsToHideLeft = 0;\r\n      } else if (page > 1) {\r\n        itemsToHideLeft = (page - 1) * visibleElements;\r\n      }\r\n      const remainingElements = totalItems - itemsToHideLeft;\r\n      const itemsToShow =\r\n        remainingElements >= visibleElements\r\n          ? visibleElements\r\n          : remainingElements;\r\n      setConfig({\r\n        itemsToHideLeft,\r\n        itemsToShow,\r\n        itemsToHideRight: remainingElements - itemsToShow,\r\n        shouldLoadMore: remainingElements < visibleElements,\r\n        visibleElements\r\n      })\r\n    }\r\n\r\n  }, [inputs]);\r\n\r\n  return [\r\n    config,\r\n    setInputs\r\n  ];\r\n}","import styled from \"styled-components\";\r\n\r\nexport const Button = styled.button<{ size?: string }>`\r\n  background: none;\r\n  border: 0;\r\n  outline: none;\r\n  padding: 0;\r\n  cursor: pointer;\r\n  ${({size}) => {\r\n    let style;\r\n    switch (size) {\r\n      case \"small\":\r\n        style = \"min-width: 2rem; height: 2rem;\";\r\n        break;\r\n      case \"medium\":\r\n        style = \"min-width: 3rem; height: 3rem;\";\r\n        break;\r\n      case \"large\":\r\n        style = \"min-width: 4rem; height: 4rem;\";\r\n        break;\r\n    }\r\n    return style;\r\n  }}\r\n`;\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const details = gql`\r\n  query details($lang: String!, $id: Float!) {\r\n    getDetails(lang: $lang, movie_id: $id) {\r\n      adult\r\n      title\r\n      backdrop_path\r\n      poster_path\r\n      genres {\r\n        id\r\n        name\r\n      }\r\n      budget\r\n      imdb_id\r\n      overview\r\n      popularity\r\n      id\r\n      production_companies {\r\n        name\r\n        logo_path\r\n      }\r\n      release_date\r\n      revenue\r\n      runtime\r\n      tagline\r\n      video\r\n      original_language\r\n      vote_average\r\n    }\r\n}\r\n`; ","import styled from 'styled-components';\r\nimport {animated} from \"react-spring\";\r\n\r\nexport const DetailsCardWrapper = styled(animated.div)`\r\n  align-items: center;\r\n  background: #000;\r\n  display: flex;\r\n  height: 100%;\r\n  justify-content: space-around;\r\n  position: relative;\r\n  padding: 1rem .5rem;\r\n  margin-top: 1.5rem;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const DetailsWrapper = styled.section`\r\n  align-items: flex-start;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  justify-content: flex-start;\r\n  width: 100%;\r\n  background: #191919;\r\n  border-radius: .2rem;\r\n  &>* {\r\n    padding-left: 1.5rem;\r\n  }\r\n  @media (min-width: 1366px) {\r\n    width: 50%;\r\n  }\r\n`;\r\n\r\nexport const DetailsPosterWrapper = styled.div`\r\n  align-items: flex-start;\r\n  display: flex;\r\n  flex: 1;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  width: 10%;\r\n  margin: auto;\r\n  height: 350px;\r\n`;\r\n\r\nexport const Backdrop = styled.div``;\r\n\r\nexport const BackdropImage = styled.img``;\r\n\r\nconst Font = styled.div`\r\n  font-family: \"Poppins\";\r\n`\r\n\r\nexport const Title = styled(Font)`\r\n  color: #fff;\r\n  font-size: 1.5rem;\r\n  font-weight: 400;\r\n  margin-top: 1rem;\r\n  /* padding-left: 1.5rem; */\r\n  text-align: left;\r\n`;\r\n\r\nexport const Overview = styled(Title)`\r\n  color: #fff;\r\n  font-size: .95rem;\r\n  font-weight: 300;\r\n  margin-bottom: 1rem;\r\n  width: 95%;\r\n`;\r\n\r\nexport const Budget = styled.div``;\r\n\r\nexport const AttributesContainer = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  margin-left: auto;\r\n  margin-right: 1rem;\r\n  padding-left: 1.5rem;\r\n`;\r\n\r\nexport const AttributeContainer = styled.div`\r\n  margin-right: .75rem;\r\n`;\r\n\r\nexport const CloseDetails = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  height: 3rem;\r\n  outline: none;\r\n  position: absolute;\r\n  right: 0;\r\n  top: -2rem;\r\n  width: 3rem;\r\n`;\r\n\r\nexport const GenresContainer = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  margin-bottom: .25rem;\r\n  flex-wrap: wrap;\r\n  margin-top: .25rem;\r\n`;\r\n\r\nexport const ReviewsWrapper = styled.div`\r\n  @media (min-width: 1366px) {\r\n    width: 48%;\r\n  }\r\n  width: 100%;\r\n  height: 100%;\r\n  background: #191919;\r\n  border-radius: .2rem;\r\n`;\r\n\r\nexport const Box2 = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: flex-start;\r\n  justify-content: center;\r\n  padding-left: 0;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const CastAndCrewWrapper = styled.div`\r\n  width: 95%;\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const GenresWrapper = styled.ul`\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: .2rem;\r\n`;\r\n\r\nexport const GenreItem = styled.li`\r\n  align-items: center;\r\n  background: rgba(204,0,0,0.95);\r\n  border-radius: .2rem;\r\n  box-shadow: 0 0.5px 0 0 #000, 0 1px 2px 0 #000;\r\n  color: #fff;\r\n  display: flex;\r\n  font-family: \"Poppins\";\r\n  font-size: .85rem;\r\n  font-weight: 400;\r\n  justify-content: center;\r\n  margin-right: .5rem;\r\n  padding: .25rem .35rem;\r\n`;","import React from \"react\";\r\nimport { Genre } from \"../../models/Genre\";\r\nimport { GenresWrapper, GenreItem } from \"./genres-styles\";\r\n\r\nconst Genres: React.FunctionComponent<{items?: Genre[]}> = ({items}) => (\r\n  <GenresWrapper>\r\n    { items && items.map(({ id, name }) => (\r\n      <GenreItem key={id}>{name}</GenreItem>\r\n    ))}\r\n  </GenresWrapper>\r\n);\r\n\r\nexport default Genres;\r\n","import styled from \"styled-components\";\r\n\r\nconst Font = styled.div`\r\n  font-family: \"Poppins\";\r\n`;\r\n\r\nexport const AttributeWrapper = styled(Font)`\r\n  align-items: center;\r\n  background: #2a2a2a;\r\n  border-radius: 3px;\r\n  box-shadow: 0 0.5px 0 0 #000, 0 1px 2px 0 #000;\r\n  display: flex;\r\n  height: 1.75rem;\r\n  justify-content: flex-start;\r\n  min-width: 7rem;\r\n`;\r\n\r\nexport const AttributeLabel = styled.span`\r\n  align-items: center;\r\n  color: #fff;\r\n  display: flex;\r\n  font-size: .85rem;\r\n  font-weight: 400;\r\n  justify-content: flex-start;\r\n  padding-left: .5rem;\r\n  text-align: center;\r\n  & span {\r\n    margin-right: .4rem;\r\n  }\r\n`;\r\n\r\nexport const AttributeValue = styled.span`\r\n  align-items: center;\r\n  background-color: rgba(204,0,0,0.8);\r\n  border-bottom-right-radius: 3px;\r\n  border-top-right-radius: 3px;\r\n  box-shadow: inset 0 0 10px 1px rgba(0,0,0,0.35);\r\n  color: #fff;\r\n  display: flex;\r\n  font-size: .85rem;\r\n  font-weight: 300;\r\n  height: 100%;\r\n  margin-left: auto;\r\n  padding: 0 .5rem;\r\n  white-space: nowrap;\r\n`;\r\n\r\nexport const IconWrapper = styled.span`\r\n  display: flex;\r\n  height: 29px;\r\n  width: 20px;\r\n  & svg {\r\n    width: 100%;\r\n  }\r\n`","import React from \"react\";\r\nimport {\r\n  AttributeLabel, \r\n  AttributeValue,\r\n  AttributeWrapper,\r\n} from \"./details-attribute.style\";\r\n\r\nexport interface AttributeModel {\r\n  label: string;\r\n  value: string | number;\r\n}\r\n\r\nconst RunTime: React.FunctionComponent<AttributeModel> = ({ label, value }) => (\r\n  <AttributeWrapper>\r\n    <AttributeLabel>\r\n      <span>{label}</span>\r\n    </AttributeLabel>\r\n    <AttributeValue>{value}</AttributeValue>\r\n  </AttributeWrapper>\r\n);\r\n\r\nexport default RunTime;\r\n","import styled from \"styled-components\";\r\n\r\nconst Font = styled.div`\r\n  font-family: \"Poppins\";\r\n`\r\n\r\nexport const Title = styled(Font)`\r\n  color: #fff;\r\n  font-size: 1.75rem;\r\n  font-weight: 400;\r\n  overflow: hidden;\r\n  text-align: left;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`;\r\n\r\nexport const TitleWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  margin-top: 1rem;\r\n  width: 100%;\r\n`;\r\n\r\nexport const DetailsRatingContainer = styled.div`\r\n  margin-left: auto;\r\n  padding-right: 3rem;\r\n`;\r\n\r\nexport const TitleYear = styled.span`\r\n  color: rgba(204,0,0,0.85);\r\n  font-size: 1.25rem;\r\n`;\r\n\r\nexport const TitleText = styled.span`\r\n  max-width: 85%;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const TitleRow1 = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const TitleRow2 = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const DetailsRatingWrapper = styled.div<{ rating?: number }>`\r\n  align-items: center;\r\n  border-radius: 0.2rem;\r\n  box-shadow: inset 0 0 6px 3px rgba(0, 0, 0, 0.25);\r\n  display: flex;\r\n  height: 100%;\r\n  justify-content: center;\r\n  min-width: 3.5rem;\r\n  height: 3rem;\r\n  ${({ rating }) => {\r\n    if (!rating) return \"#fff\";\r\n\r\n    let style = \"\";\r\n    let color = \"#161616\";\r\n\r\n    if (rating <= 5) {\r\n      style = \"background-color: #AD8A56\";\r\n      color = \"#fff\";\r\n    } else if (rating < 8) {\r\n      style = \"background-color: #D7D7D7\";\r\n    } else {\r\n      style = \"background-color: #ffd700\";\r\n    }\r\n\r\n    return `${style};\r\n    & span {\r\n      color: ${color}\r\n    }`;\r\n  }};\r\n`;\r\n\r\nexport const DetailsRatingValue = styled.span`\r\n  font-family: \"Poppins\";\r\n  font-size: 2rem;\r\n  font-weight: 400;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  DetailsRatingValue,\r\n  DetailsRatingWrapper,\r\n} from \"./details-rating.style\";\r\nimport { CrownIcon } from \"../../icons\";\r\n\r\nconst DetailsRating: React.FunctionComponent<{ rating?: number }> = ({\r\n  rating,\r\n}) => (\r\n  <DetailsRatingWrapper rating={rating}>\r\n    <DetailsRatingValue>\r\n      {/* <CrownIcon color=\"#fff\"></CrownIcon> */}\r\n      {`${rating}`}\r\n    </DetailsRatingValue>\r\n  </DetailsRatingWrapper>\r\n);\r\n\r\nexport default DetailsRating;\r\n","import React from \"react\";\r\nimport {\r\n  Title,\r\n  TitleWrapper,\r\n  DetailsRatingContainer,\r\n  TitleYear,\r\n  TitleText,\r\n  TitleRow1,\r\n  TitleRow2,\r\n} from \"./details-title.style\";\r\nimport DetailsRating from \"../rating/details-rating\";\r\n\r\nexport interface DetailsTitleModel {\r\n  year?: string;\r\n  title?: string;\r\n  rating?: number;\r\n}\r\n\r\nconst DetailsTitle: React.FunctionComponent<DetailsTitleModel> = ({\r\n  year,\r\n  title,\r\n  rating,\r\n}) => {\r\n  return (\r\n    <TitleWrapper>\r\n      <Title>\r\n        <TitleRow1>\r\n          <TitleText>{`${title}`}</TitleText>\r\n          {rating && (\r\n            <DetailsRatingContainer>\r\n              <DetailsRating rating={rating} />\r\n            </DetailsRatingContainer>\r\n          )}\r\n        </TitleRow1>\r\n        <TitleRow2>\r\n          <TitleYear>{`${year ? new Date(year).getFullYear() : \"\"}`}</TitleYear>\r\n        </TitleRow2>\r\n      </Title>\r\n    </TitleWrapper>\r\n  );\r\n};\r\n\r\nexport default DetailsTitle;\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const cast = gql`\r\n  query cast($movie_id: Float!) {\r\n    getCredits(movie_id: $movie_id) {\r\n      id\r\n      cast {\r\n        name\r\n        order\r\n        profile_path\r\n        credit_id\r\n        id\r\n      }\r\n      crew {\r\n        name\r\n        profile_path\r\n        credit_id\r\n        id\r\n      }\r\n  }\r\n}`;","import styled from \"styled-components\";\r\nimport { animated } from 'react-spring';\r\n\r\nexport const ObjectsContainer = styled.section`\r\n  align-items: flex-start;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-left: -1rem;\r\n  padding: .25rem 0;\r\n  width: 100%;\r\n`;\r\n\r\nexport const ObjectsWrapper = styled.ul<{columns?: number}>`\r\n  align-items: flex-start;\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  justify-content: flex-start;\r\n  list-style: none;\r\n  margin: 0;\r\n  overflow-x: hidden;\r\n  padding: 0;\r\n  scroll-behavior: smooth;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Object = styled.li`\r\n  /* margin-right: 1rem; */\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 10rem;\r\n  width: 7rem;\r\n`;\r\n\r\nexport const ObjectImage = styled.img<{loaded?: boolean}>`\r\n  border-radius: .25rem;\r\n  display: ${p => p.loaded ?  \"block\" : \"none\"};\r\n  margin-top: auto;\r\n  max-height: 80%;\r\n  max-width: 100%;\r\n  object-fit: contain;\r\n`;\r\n\r\nexport const ObjectName = styled.span`\r\n  color: #fff;\r\n  font-family: \"Poppins\";\r\n  font-size: .75rem;\r\n  font-weight: 300;\r\n  margin-top: auto;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  width: 100%;\r\n`;\r\n\r\nexport const FallbackImage = styled.div<{failed?: boolean}>`\r\n  align-items: center;\r\n  display: flex;\r\n  height: 80%;\r\n  justify-content: center;\r\n  width: 6rem;\r\n  & svg {\r\n    width: 3rem;\r\n    height: 3rem;\r\n  }\r\n  background: #2a2a2a;\r\n  border-radius: .25rem;\r\n  margin-top: auto;\r\n`;\r\n\r\nexport const ObjectHeader = styled.header`\r\n  color:  rgba(204,0,0,1);\r\n  font-family: \"Poppins\";\r\n  font-size: 1.2rem;\r\n  font-weight: 300;\r\n  margin-bottom: .25rem;\r\n  padding-left: 1rem;\r\n`;\r\n\r\nexport const MediaObjectContainer = animated.div;\r\n","import React from \"react\";\r\nimport { MediaObject as MediaObjectModel } from \"../../models/MediaObject\";\r\nimport {\r\n  ObjectsWrapper,\r\n  Object,\r\n  ObjectImage,\r\n  ObjectName,\r\n  FallbackImage,\r\n  ObjectHeader,\r\n  ObjectsContainer,\r\n  MediaObjectContainer,\r\n} from \"./object.styles\";\r\nimport { UserIcon } from \"./../icons/index\";\r\n\r\nconst MediaObjects: React.FunctionComponent<{\r\n  id: number;\r\n  items: MediaObjectModel[];\r\n  title?: string;\r\n}> = React.memo(\r\n  ({ items, title }) => {\r\n    return (\r\n      <ObjectsContainer>\r\n        <ObjectHeader>{title}</ObjectHeader>\r\n        <ObjectsWrapper>\r\n          {items.length &&\r\n            items.map(({ name, path, id }, index) => {\r\n              return (\r\n                <MediaObjectContainer key={`${id}-${index}-${name}`}>\r\n                  <MediaObject name={name} path={path} id={id} />\r\n                </MediaObjectContainer>\r\n              );\r\n            })}\r\n        </ObjectsWrapper>\r\n      </ObjectsContainer>\r\n    );\r\n  },\r\n  (prev, current) => prev.id === current.id\r\n);\r\n\r\nconst MediaObject: React.FunctionComponent<MediaObjectModel> = React.memo(\r\n  ({ path, id, name }) => {\r\n    const [loaded, setLoaded] = React.useState(false);\r\n    return (\r\n      <Object>\r\n        {path ? (\r\n          <ObjectImage\r\n            src={`http://image.tmdb.org/t/p/w200/${path}`}\r\n            onLoad={() => setLoaded(true)}\r\n            loaded={loaded}\r\n          ></ObjectImage>\r\n        ) : (\r\n          <FallbackImage>\r\n            <UserIcon color=\"#4b4848\" />\r\n          </FallbackImage>\r\n        )}\r\n        <ObjectName>{name}</ObjectName>\r\n      </Object>\r\n    );\r\n  },\r\n  (prev, current) => prev.id === current.id\r\n);\r\n\r\nexport default MediaObjects;\r\n","import React from \"react\";\r\nimport { useApolloClient } from \"@apollo/client\";\r\nimport { Credits } from \"../../models/Credits\";\r\nimport { cast } from \"../../gqls/cast\";\r\nimport MediaObjects from \"../../components/media-objects/media-objects\";\r\nimport { MediaObject } from \"./../../models/MediaObject\";\r\n\r\ninterface CastResultDetails {\r\n  getCredits: Credits;\r\n}\r\n\r\ninterface CastAndCrewModel {\r\n  movieId?: number;\r\n  title?: string;\r\n  isCast?: boolean;\r\n};\r\n\r\nconst CastAndCrew: React.FunctionComponent<CastAndCrewModel> = React.memo(\r\n  ({ movieId }) => {\r\n    const client = useApolloClient();\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [detailsData, setDetailsData] = React.useState<Credits>({ id: \"\" });\r\n\r\n    const executeQuery = async () => {\r\n      setLoading(true);\r\n      const { data } = await client.query<CastResultDetails>({\r\n        query: cast,\r\n        variables: {\r\n          lang: \"en-US\",\r\n          movie_id: movieId,\r\n        },\r\n        fetchPolicy: \"cache-first\",\r\n      });\r\n      if (data) {\r\n        setDetailsData(data.getCredits);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n      if (movieId) {\r\n        executeQuery();\r\n      }\r\n    }, [movieId]);\r\n\r\n    let view: any = null;\r\n\r\n    if (!loading && detailsData.id) {\r\n      const { crew, cast, id } = detailsData;\r\n      view = (\r\n        <>\r\n          {cast && (\r\n            <MediaObjects\r\n              title={\"Movie Cast\"}\r\n              id={+id}\r\n              items={cast.map<MediaObject>(({ name, profile_path, id }) => ({\r\n                name: name,\r\n                path: profile_path,\r\n                id,\r\n              }))}\r\n            />\r\n          )}\r\n          {crew && (\r\n            <MediaObjects\r\n              title={\"Movie Crew\"}\r\n              id={+id}\r\n              items={crew.map<MediaObject>(({ name, profile_path, id }) => ({\r\n                name: name,\r\n                path: profile_path,\r\n                id,\r\n              }))}\r\n            />\r\n          )}\r\n        </>\r\n      );\r\n    }\r\n    return <>{view}</>;\r\n  },\r\n  (prev, current) => prev.movieId === current.movieId\r\n);\r\n\r\nexport default CastAndCrew;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CastDetailsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;","import React from \"react\";\r\nimport CastDetails from \"./../../containers/details/castDetails\";\r\nimport { CastDetailsContainer } from \"./details-cast-and-crew.styles\";\r\n\r\nexport const CastAndCrew: React.FunctionComponent<{\r\n  id: number;\r\n}> = React.memo(\r\n  ({ id }) => {\r\n    return <CastDetailsContainer>\r\n      <CastDetails\r\n        movieId={id}\r\n        title=\"Movie Cast\"\r\n        isCast\r\n      />\r\n    </CastDetailsContainer>\r\n  },\r\n  (prev, current) => prev.id === current.id\r\n);\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query reviews($movie_id: Float!, $page: Float!) {\r\n    getReviews(movie_id: $movie_id, page: $page) {\r\n      total_results\r\n      id\r\n      results {\r\n        author\r\n        content\r\n        url\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;","import styled from \"styled-components\";\r\nimport React from \"react\";\r\nimport {useSpring, animated} from \"react-spring\";\r\n\r\nenum LoaderSize {\r\n  small = \"SMALL\",\r\n  large = \"LARGE\",\r\n}\r\n\r\nconst Wrapper = styled(animated.div)`\r\n  align-items: center;\r\n  background: transparent;\r\n  display: flex;\r\n  height: 100%;\r\n  justify-content: center;\r\n  position: relative;\r\n  width: 100%;\r\n`;\r\n\r\nconst Loader: React.FunctionComponent<{ size?: LoaderSize }> = ({ size }) => {\r\n  const wh = size === LoaderSize.small ? 38 : 45;\r\n  const props = useSpring({\r\n    opacity: 1,\r\n    from: {\r\n      opacity: 0\r\n    },\r\n  });\r\n  return (\r\n    <Wrapper style={props}>\r\n      <svg\r\n        width={wh}\r\n        height={wh}\r\n        viewBox=\"0 0 38 38\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        stroke=\"#bdbdbd\"\r\n      >\r\n        <g fill=\"none\" fillRule=\"evenodd\">\r\n          <g transform=\"translate(1 1)\" strokeWidth=\"2\">\r\n            <circle strokeOpacity=\".5\" cx=\"18\" cy=\"18\" r=\"18\" />\r\n            <path d=\"M36 18c0-9.94-8.06-18-18-18\">\r\n              <animateTransform\r\n                attributeName=\"transform\"\r\n                type=\"rotate\"\r\n                from=\"0 18 18\"\r\n                to=\"360 18 18\"\r\n                dur=\"1s\"\r\n                repeatCount=\"indefinite\"\r\n              />\r\n            </path>\r\n          </g>\r\n        </g>\r\n      </svg>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import styled from \"styled-components\";\r\nimport { animated } from \"react-spring\";\r\n\r\nexport const ReviewsWrapper = styled.ul`\r\n  color: #fff;\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-family: \"Poppins\";\r\n  height: 95%;\r\n  list-style: none;\r\n  margin: 0;\r\n  padding:0;\r\n`;\r\n\r\nexport const ReviewWrapper = styled(animated.li)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: .5rem 0 1rem;\r\n  position: relative;\r\n  width: 100%;\r\n`;\r\n\r\nexport const ReviewContent = styled(animated.div)`\r\n  font-size: 0.85rem;\r\n  font-weight: 300;\r\n  overflow: hidden;\r\n  position: relative;\r\n  text-align: left;\r\n  width: 100%;\r\n  color: #bdbdbd;\r\n`;\r\n\r\nexport const ReviewAuthor = styled.div`\r\n  font-size: .9rem;\r\n  font-weight: 400;\r\n  text-align: left;\r\n  width: 100%;\r\n`;\r\n\r\nexport const ReviewsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  padding: 0 .5rem 0 1rem;\r\n`;\r\n\r\nexport const ReviewsHeader = styled.header`\r\n  align-items: center;\r\n  color: #fff;\r\n  display: flex;\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  height:5%;\r\n`;\r\n\r\nexport const ReadMoreControl = styled.div`\r\n  align-items: center;\r\n  bottom: .25rem;\r\n  color: rgba(204,0,0,0.9);\r\n  cursor: pointer;\r\n  display: flex;\r\n  font-size: .8rem;\r\n  font-weight: 400;\r\n  height: 1.5rem;\r\n  justify-content: flex-start;\r\n  width: 100%;\r\n`;\r\n\r\nexport const ReviewText = styled.p<{showFull?: boolean}>`\r\n  ${p => !p.showFull ? 'max-height: 150px;': ''};\r\n  display: flex;\r\n  align-items: flex-start;\r\n  justify-content: flex-start;\r\n  margin: 0;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const GradientCover = styled.span`\r\n  background: linear-gradient(0deg, #191919 0%,  rgba(25,25,25, .25) 100%);\r\n  bottom: 0;\r\n  height: 3.5rem;\r\n  position: absolute;\r\n  width: 100%;\r\n`;\r\n\r\nexport const ReviewHeader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: .1rem;\r\n`;\r\n\r\nexport const ReviewHeaderIcon = styled.span`\r\n  width: 1.25rem;\r\n  height: 1.25rem;\r\n  display: flex;\r\n  & svg {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;","import React from \"react\";\r\nimport ReviewModel from \"../../../models/Review\";\r\nimport {\r\n  ReviewsWrapper,\r\n  ReviewWrapper,\r\n  ReviewContent,\r\n  ReviewAuthor,\r\n  ReviewsContainer,\r\n  ReviewsHeader,\r\n  ReadMoreControl,\r\n  ReviewText,\r\n  GradientCover,\r\n  ReviewHeaderIcon,\r\n} from \"./details-reviews.style\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport { useTrail, config } from \"react-spring\";\r\nimport { HashIcon } from \"../../icons\";\r\n\r\ninterface ReviewsModel {\r\n  items: ReviewModel[];\r\n}\r\n\r\nconst Reviews: React.FunctionComponent<ReviewsModel> = ({ items }) => {\r\n  const trail = useTrail(items.length, {\r\n    opacity: 1,\r\n    from: {\r\n      opacity: 0,\r\n    },\r\n    config: config.gentle,\r\n  });\r\n\r\n  return (\r\n    <ReviewsContainer>\r\n      <ReviewsHeader>Reviews</ReviewsHeader>\r\n      <Scrollbars>\r\n        <ReviewsWrapper>\r\n          {trail.map((props, index) => {\r\n            const { content, author, id } = items[index];\r\n            return (\r\n              <Review\r\n                content={content}\r\n                author={author}\r\n                id={id}\r\n                key={id}\r\n                style={props}\r\n                index={index}\r\n              />\r\n            );\r\n          })}\r\n        </ReviewsWrapper>\r\n      </Scrollbars>\r\n    </ReviewsContainer>\r\n  );\r\n};\r\n\r\nconst Review: React.FunctionComponent<ReviewModel> = ({\r\n  content,\r\n  author,\r\n  id,\r\n  style,\r\n  index = null,\r\n}) => {\r\n  const textRef = React.useRef<HTMLDivElement>(null);\r\n\r\n  const [showReadMore, setShowReadMore] = React.useState(false);\r\n  const [showFullText, setShowFullText] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    const node = textRef && textRef.current;\r\n\r\n    if (node) {\r\n      const scrollHeight = node.scrollHeight;\r\n\r\n      if (scrollHeight > 150) {\r\n        setShowReadMore(true);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <ReviewWrapper key={id}>\r\n      <ReviewsHeader>\r\n        {/* <ReviewHeaderIcon>\r\n          <HashIcon></HashIcon>\r\n        </ReviewHeaderIcon>\r\n        <span>{index !== null && index + 1}</span> */}\r\n        <ReviewAuthor>{`${author}`}</ReviewAuthor>\r\n      </ReviewsHeader>\r\n      <ReviewContent style={style}>\r\n        <ReviewText ref={textRef} showFull={showFullText}>\r\n          {content}\r\n        </ReviewText>\r\n        {showReadMore && !showFullText && <GradientCover></GradientCover>}\r\n      </ReviewContent>\r\n      {showReadMore && (\r\n        <ReadMoreControl onClick={() => setShowFullText(!showFullText)}>\r\n          {showFullText ? \"Read Less\" : \"Read More...\"}\r\n        </ReadMoreControl>\r\n      )}\r\n    </ReviewWrapper>\r\n  );\r\n};\r\n\r\nexport default Reviews;\r\n","import React from \"react\";\r\nimport { useApolloClient } from \"@apollo/client\";\r\nimport reviewsQuery from \"../../gqls/reviews\";\r\nimport Loader from \"../../components/media-loader\";\r\nimport Review from \"../../models/Review\";\r\nimport Reviews from \"../../components/media-details/reviews/details-reviews\";\r\n\r\ninterface MovieResultDetails {\r\n  getReviews: ReviewResultModel;\r\n}\r\n\r\ninterface ReviewResultModel {\r\n  total_results: number;\r\n  results: Review[];\r\n  id: number;\r\n}\r\n\r\nconst MovieDetails: React.FunctionComponent<{\r\n  movieId: number;\r\n}> = React.memo(\r\n  ({ movieId }) => {\r\n    const [data, setData] = React.useState<ReviewResultModel | null>();\r\n    const [loading, setLoading] = React.useState(false);\r\n\r\n    const client = useApolloClient();\r\n\r\n    React.useEffect(() => {\r\n      if (movieId) {\r\n        executeQuery();\r\n      } else {\r\n        setData(null);\r\n      }\r\n    }, [movieId]);\r\n\r\n    const executeQuery = async () => {\r\n      setLoading(true);\r\n\r\n      const { data } = await client.query<MovieResultDetails>({\r\n        query: reviewsQuery,\r\n        variables: {\r\n          page: 1,\r\n          movie_id: movieId,\r\n        },\r\n      });\r\n\r\n      if (data) {\r\n        setData(data.getReviews);\r\n      }\r\n\r\n      setLoading(false);\r\n    };\r\n\r\n    let view;\r\n\r\n    if (!loading && data && data.id) {\r\n      view = <Reviews items={data.results} />;\r\n    } else {\r\n      view = <Loader />;\r\n    }\r\n\r\n    return view;\r\n  },\r\n  (prev, current) => prev.movieId === current.movieId\r\n);\r\n\r\nexport default MovieDetails;\r\n","import * as React from \"react\";\r\nimport {\r\n  DetailsCardWrapper,\r\n  DetailsWrapper,\r\n  DetailsPosterWrapper,\r\n  CloseDetails,\r\n  Overview,\r\n  AttributesContainer,\r\n  GenresContainer,\r\n  AttributeContainer,\r\n  ReviewsWrapper,\r\n  Box2,\r\n  CastAndCrewWrapper\r\n} from \"./details-card.styles\";\r\nimport Movie from \"../../models/Movie\";\r\nimport Poster from \"../media-poster/poster\";\r\nimport { CardSize } from \"../../models/CardSize\";\r\nimport { CloseIcon } from \"./../icons/index\";\r\nimport Genres from \"../media-genres/genres\";\r\nimport Attribute from \"./attribute/details-attribute\";\r\nimport DetailsTitle from \"./title/details-title\";\r\nimport { CastAndCrew } from \"./details-cast-and-crew\";\r\nimport Reviews from \"../../containers/details/reviews\";\r\nimport { format } from \"date-fns\";\r\nimport ISO6391 from \"iso-639-1\";\r\nimport { useSpring, config } from \"react-spring\";\r\n\r\ntype CardDetail = Movie & { handleClose?: () => void; isLoading: boolean };\r\n\r\nexport default React.memo(\r\n  ({\r\n    title,\r\n    handleClose,\r\n    id,\r\n    overview,\r\n    genres,\r\n    runtime,\r\n    release_date,\r\n    isLoading,\r\n    original_language,\r\n    poster_path,\r\n    vote_average,\r\n    video,\r\n  }: CardDetail) => {\r\n    const wrapperRef = React.useRef<HTMLDivElement>(null);\r\n\r\n    // const props = useSpring({\r\n    //   opacity: 1,\r\n    //   from: {\r\n    //     opacity: 0,\r\n    //   },\r\n    //   config: config.gentle,\r\n    // });\r\n\r\n    return (\r\n      <DetailsCardWrapper ref={wrapperRef}>\r\n        {!isLoading ? (\r\n          <>\r\n            {/* <DetailsPosterWrapper>\r\n              <Poster poster_path={poster_path} size={CardSize.large} />\r\n              {video}\r\n            </DetailsPosterWrapper> */}\r\n            <DetailsWrapper>\r\n              <DetailsTitle\r\n                year={release_date}\r\n                title={title}\r\n                rating={vote_average}\r\n              ></DetailsTitle>\r\n              <Overview>{overview}</Overview>\r\n              <GenresContainer>\r\n                <Genres items={genres} />\r\n                <AttributesContainer>\r\n                  {runtime && (\r\n                    <AttributeContainer>\r\n                      <Attribute\r\n                        label=\"Runtime\"\r\n                        value={`${Math.round(runtime / 60)}hrs`}\r\n                      />\r\n                    </AttributeContainer>\r\n                  )}\r\n                  {release_date && (\r\n                    <AttributeContainer>\r\n                      <Attribute\r\n                        label=\"Release Date\"\r\n                        value={format(new Date(release_date), \"do, MMM yyyy\")}\r\n                      />\r\n                    </AttributeContainer>\r\n                  )}\r\n                  {original_language && (\r\n                    <AttributeContainer>\r\n                      <Attribute\r\n                        label=\"Language\"\r\n                        value={ISO6391.getName(original_language)}\r\n                      />\r\n                    </AttributeContainer>\r\n                  )}\r\n                </AttributesContainer>\r\n              </GenresContainer>\r\n              <Box2>\r\n                {/* <DetailsPosterWrapper>\r\n                  <Poster poster_path={poster_path} size={CardSize.large} />\r\n                </DetailsPosterWrapper> */}\r\n                <CastAndCrewWrapper>\r\n                  <CastAndCrew id={id} />\r\n                </CastAndCrewWrapper>\r\n              </Box2>\r\n            </DetailsWrapper>\r\n            <ReviewsWrapper>\r\n              <Reviews movieId={id} />\r\n            </ReviewsWrapper>\r\n          </>\r\n        ) : (\r\n          <div>Test</div>\r\n        )}\r\n        <CloseDetails onClick={handleClose}>\r\n          <CloseIcon />\r\n        </CloseDetails>\r\n      </DetailsCardWrapper>\r\n    );\r\n  },\r\n  (prev, current) => prev.id === current.id\r\n);\r\n","import React from \"react\";\r\nimport { useApolloClient } from \"@apollo/client\";\r\nimport { details } from \"../../gqls/movieDetails\";\r\nimport CardDetails from \"../../components/media-details/details-card\";\r\nimport { MovieDetail } from \"../../models/MovieDetails\";\r\nimport Shimmer from \"../../components/media-loader\";\r\n\r\ninterface MovieResultDetails {\r\n  getDetails: MovieDetail;\r\n}\r\n\r\nconst MovieDetails: React.FunctionComponent<{\r\n  movieId: number;\r\n  handleClose?: () => void;\r\n}> = React.memo(({ movieId, handleClose }) => {\r\n  const [data, setData] = React.useState<MovieDetail | null>();\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  const client = useApolloClient();\r\n\r\n  React.useEffect(() => {\r\n    if(movieId) {\r\n      executeQuery();\r\n    } else {\r\n      setData(null);\r\n    }\r\n  }, [movieId]);\r\n\r\n  const executeQuery = async () => {\r\n    setLoading(true);\r\n\r\n    const { data } = await client.query({\r\n      query: details,\r\n      variables: {\r\n        lang: \"en-US\",\r\n        id: movieId,\r\n      },\r\n    });\r\n\r\n    setData(data.getDetails);\r\n    setLoading(false);\r\n  };\r\n\r\n  let view;\r\n\r\n  if (!loading && data && data.id) {\r\n    const {\r\n      poster_path,\r\n      title,\r\n      id,\r\n      overview,\r\n      genres,\r\n      runtime,\r\n      release_date,\r\n      original_language,\r\n      imdb_id,\r\n      vote_average,\r\n      video\r\n    } = data;\r\n\r\n    view = (\r\n      <CardDetails\r\n        poster_path={poster_path}\r\n        title={title}\r\n        id={id}\r\n        overview={overview}\r\n        handleClose={handleClose}\r\n        genres={genres}\r\n        runtime={runtime}\r\n        release_date={release_date}\r\n        original_language={original_language}\r\n        isLoading={false}\r\n        imdb_id={imdb_id}\r\n        vote_average={vote_average}\r\n        video={video}\r\n      />\r\n    );\r\n  } else {\r\n    view = <Shimmer />;\r\n  }\r\n\r\n  return view;\r\n}, (prev, current) => prev.movieId === current.movieId);\r\n\r\nexport default MovieDetails;\r\n","import * as React from \"react\";\r\nimport {\r\n  Wrapper as WrapperContainer,\r\n  Header,\r\n  MoviesWrapper,\r\n  Title,\r\n  Footer,\r\n  TitleIcon,\r\n  TitleText,\r\n  DetailsWrapper,\r\n} from \"./index.styles\";\r\nimport Movies from \"./collection\";\r\nimport { Button } from \"../commons/styles\";\r\nimport { useSpring } from \"react-spring\";\r\nimport { ArrowDownIcon, ArrowUpIcon } from \"../icons\";\r\nimport Slider from \"../../models/Slider\";\r\nimport Movie from \"../../models/Movie\";\r\nimport MovieDetails from \"../../containers/details/movieDetails\";\r\nimport {nanoid} from \"nanoid\";\r\n\r\nconst SliderView: React.FunctionComponent<Slider> = ({\r\n  movies,\r\n  title,\r\n  fetchMore,\r\n  totalResults,\r\n  loadingState,\r\n}: Slider) => {;\r\n  const [expandFull, setExpandFull] = React.useState(false);\r\n  const [page, setPage] = React.useState(1);\r\n  const [showDetails, setShowDetails] = React.useState({\r\n    state: false,\r\n    selectedMovie: 0,\r\n  });\r\n  const [props, set] = useSpring(() => ({\r\n    height: \"320px\",\r\n    opacity: 1,\r\n  }));\r\n\r\n  const handleExpandFull = React.useCallback(() => setExpandFull(!expandFull), [\r\n    expandFull,\r\n  ]);\r\n\r\n  React.useEffect(() => {\r\n    if (!expandFull || showDetails.state) {\r\n      set({\r\n        height: \"320px\",\r\n        opacity: 1,\r\n      });\r\n    } else {\r\n      set({\r\n        height: `${320 * 3}px`,\r\n        opacity: 1,\r\n      });\r\n    }\r\n  }, [expandFull, showDetails]);\r\n\r\n  const handleLoadMore = React.useCallback(() => {\r\n    if (fetchMore) {\r\n      fetchMore(page + 1);\r\n    }\r\n    setPage(page + 1);\r\n  }, [fetchMore, page]);\r\n\r\n  const handleMovieSelection = React.useCallback(\r\n    (selectedMovie?: Movie, clear?: boolean) => {\r\n      if (clear) {\r\n        setShowDetails({ state: false, selectedMovie: 0 });\r\n      } else {\r\n        setShowDetails({ state: true, selectedMovie: selectedMovie?.id || 0 });\r\n      }\r\n    },\r\n    [showDetails]\r\n  );\r\n\r\n  const onDetailsClose = React.useCallback(\r\n    () => setShowDetails({ state: false, selectedMovie: 0 }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <WrapperContainer expand={expandFull ? 1 : 0}>\r\n      <Header>\r\n        <Title>\r\n          <TitleIcon></TitleIcon>\r\n          <TitleText>{`${title}`}</TitleText>\r\n        </Title>\r\n      </Header>\r\n\r\n      {/* movies list */}\r\n      {\r\n        <MoviesWrapper expand={expandFull ? 1 : 0} style={props}>\r\n          <Movies\r\n            items={movies}\r\n            slider={!expandFull ? 1 : 0}\r\n            expandFull={expandFull ? 1 : 0}\r\n            fetchMore={handleLoadMore}\r\n            totalResults={totalResults}\r\n            loadingState={loadingState}\r\n            onSelection={handleMovieSelection}\r\n            showDetails={showDetails.state}\r\n            selectedIndex={showDetails.selectedMovie}\r\n          ></Movies>\r\n        </MoviesWrapper>\r\n      }\r\n\r\n      {showDetails.state &&(\r\n        <DetailsWrapper>\r\n          <MovieDetails\r\n            movieId={showDetails.selectedMovie}\r\n            handleClose={onDetailsClose}\r\n          />\r\n        </DetailsWrapper>\r\n      )}\r\n\r\n      {/* footer section */}\r\n      {!showDetails.state && (\r\n        <Footer>\r\n          <Button size=\"medium\" onClick={handleExpandFull}>\r\n            {expandFull ? <ArrowUpIcon /> : <ArrowDownIcon />}\r\n          </Button>\r\n        </Footer>\r\n      )}\r\n    </WrapperContainer>\r\n  );\r\n};\r\n\r\nexport default SliderView;\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const popular = gql`\r\n  query popular($lang: String!, $page: Float!) {\r\n    getPopular(lang: $lang, page: $page) {\r\n      page\r\n      total_results\r\n      total_pages\r\n      results {\r\n        id\r\n        title\r\n        original_title\r\n        release_date\r\n        poster_path\r\n        vote_average\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const topRated = gql`\r\n  query topRated($lang: String!, $page: Float!) {\r\n    getTopRated(lang: $lang, page: $page) {\r\n      page\r\n      total_results\r\n      total_pages\r\n      results {\r\n        id\r\n        title\r\n        original_title\r\n        release_date\r\n        poster_path\r\n        vote_average\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const upcoming = gql`\r\n  query upcoming($lang: String!, $page: Float!) {\r\n    getUpcoming(lang: $lang, page: $page) {\r\n      page\r\n      total_results\r\n      total_pages\r\n      results {\r\n        id\r\n        title\r\n        original_title\r\n        release_date\r\n        poster_path\r\n        vote_average\r\n      }\r\n    }\r\n  }\r\n`;","import * as React from \"react\";\r\nimport { useApolloClient } from \"@apollo/client\";\r\nimport Slider from \"../../components/media-slider\";\r\nimport { popular } from \"../../gqls/movies\";\r\nimport Movie from \"./../../models/Movie\";\r\nimport { LoadingState } from \"../../models/Slider\";\r\n\r\nconst TopRated: React.FunctionComponent = () => {\r\n  const client = useApolloClient();\r\n  const [movieData, setMovieData] = React.useState<{\r\n    results: Movie[];\r\n    total_results?: number;\r\n  }>({\r\n    results: [],\r\n    total_results: 0,\r\n  });\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    getMovies(1);\r\n  }, []);\r\n\r\n  const getMovies = async (page: number) => {\r\n    setLoading(true);\r\n    const { data } = await client.query({\r\n      query: popular,\r\n      variables: {\r\n        lang: \"en-US\",\r\n        page,\r\n      },\r\n      fetchPolicy: \"cache-first\",\r\n    });\r\n\r\n    if (data) {\r\n      let newData = [] as Movie[];\r\n      if (movieData.results) {\r\n        newData = [...movieData.results, ...data.getPopular.results];\r\n      }\r\n      setMovieData({\r\n        results: newData,\r\n        total_results: data.getPopular.total_results,\r\n      });\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleFetchMore = (page: number) => {\r\n    getMovies(page);\r\n  };\r\n\r\n  let view = null;\r\n\r\n  if (loading) {\r\n    debugger;\r\n    view = (\r\n      <Slider\r\n        movies={[]}\r\n        title=\"Trending\"\r\n        fetchMore={handleFetchMore}\r\n        totalResults={0}\r\n        loadingState={LoadingState.LOADING}\r\n      ></Slider>\r\n    );\r\n  } else {\r\n    view = (\r\n      <Slider\r\n        movies={\r\n          movieData\r\n            ? movieData.results.map((item: any) =>\r\n                Object.assign({}, item, {\r\n                  hide: false,\r\n                  selected: false,\r\n                })\r\n              )\r\n            : []\r\n        }\r\n        title=\"Trending\"\r\n        fetchMore={handleFetchMore}\r\n        totalResults={movieData.total_results ? movieData.total_results : 0}\r\n      ></Slider>\r\n    );\r\n  }\r\n\r\n  return view;\r\n};\r\n\r\nexport default React.memo(TopRated);\r\n","import { hot } from \"react-hot-loader/root\";\nimport React from \"react\";\nimport \"./App.css\";\n// import ApolloClient from \"apollo-boost\";\nimport {ApolloClient, InMemoryCache, ApolloProvider} from \"@apollo/client\";\n// import { ApolloProvider } from \"@apollo/react-hooks\";\nimport TopRatedMovies from \"./containers/movies/topRated\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport OnAir from \"./containers/tv/onAir\";\n// import Popular from \"./containers/tv/popular\";\n// import TopRated from \"./containers/tv/topRated\";\nimport Trending from \"./containers/movies/popular\";\nimport Upcoming from \"./containers/movies/upComing\";\n\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000/graphql\",\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route path=\"/movies\">\n              {/* <TopRatedMovies /> */}\n              <Trending />\n            </Route>\n          </Switch>\n          {/* <Route path=\"/tv\"> */}\n          {/* <TopRated /> */}\n          {/* <Popular />*/}\n          {/* <OnAir />\n          </Route> */}\n        </Router>\n      </div>\n    </ApolloProvider>\n  );\n}\n\nexport default hot(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}